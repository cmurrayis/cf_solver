[metadata]
name = cloudflare_research
version = 1.0.0
description = High-performance browser emulation module for Cloudflare challenge research
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/example/cloudflare_research
author = CF Solver Research
author_email = research@example.com
license = MIT
license_file = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Internet :: WWW/HTTP :: Browsers
    Topic :: Software Development :: Testing

[options]
packages = find:
python_requires = >=3.11
include_package_data = True
zip_safe = False
install_requires = file: requirements.txt

[options.packages.find]
exclude =
    tests*
    docs*
    examples*
    benchmarks*

[options.extras_require]
dev = file: requirements-dev.txt

[options.entry_points]
console_scripts =
    cloudflare-research = cloudflare_research.cli:main

# Flake8 Configuration
[flake8]
max-line-length = 88
extend-ignore =
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    E501,  # line too long (handled by black)
exclude =
    .git,
    __pycache__,
    .venv,
    venv,
    build,
    dist,
    *.egg-info,
    .pytest_cache,
    .mypy_cache
per-file-ignores =
    __init__.py:F401  # imported but unused
    tests/*:F401,F811  # test-specific ignores
max-complexity = 12
docstring-convention = google

# MyPy Configuration
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True

[mypy-curl_cffi.*]
ignore_missing_imports = True

[mypy-py_mini_racer.*]
ignore_missing_imports = True

[mypy-uvloop.*]
ignore_missing_imports = True

# Coverage Configuration
[coverage:run]
source = cloudflare_research
omit =
    */tests/*
    */test_*
    setup.py
    */__init__.py
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
show_missing = True
precision = 2
fail_under = 80

[coverage:html]
directory = htmlcov

# Tool Configuration
[tool:pytest]
minversion = 7.0
addopts =
    -ra
    -q
    --strict-markers
    --strict-config
    --cov=cloudflare_research
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
testpaths = tests
asyncio_mode = auto
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    contract: marks tests as contract tests
    performance: marks tests as performance tests

[isort]
profile = black
multi_line_output = 3
line_length = 88
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
known_first_party = cloudflare_research
known_third_party =
    aiohttp,
    curl_cffi,
    uvloop,
    py_mini_racer,
    asyncio_throttle,
    pytest,
    pydantic